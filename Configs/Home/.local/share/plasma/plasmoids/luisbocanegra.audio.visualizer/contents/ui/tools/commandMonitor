#!/usr/bin/env python3

import os
import asyncio
import sys
import websockets

if len(sys.argv) < 3:
    print(f"Usage: {os.path.basename(__file__)} <ws-url> <command>")
    sys.exit(1)

ws_url = sys.argv[1]
command = ["sh", "-c"]
command.extend(sys.argv[2:])


async def send_live_output():

    async with websockets.connect(ws_url) as ws:
        await ws.send(f"PID: {os.getpid()}")

    proc = await asyncio.create_subprocess_exec(
        *command, stdout=asyncio.subprocess.PIPE, stderr=asyncio.subprocess.PIPE
    )

    async with websockets.connect(ws_url) as ws:
        assert proc.stdout is not None
        async for line in proc.stdout:
            await ws.send(line.decode().rstrip())

        assert proc.stderr is not None
        async for line in proc.stderr:
            await ws.send(f"ERROR: {line.decode().rstrip()}")

    await proc.wait()


if __name__ == "__main__":
    asyncio.run(send_live_output())
